<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>MimeType.AppendParameter Method</title><meta name="Title" content="AppendParameter" /><meta name="Help.Id" content="M:FolkerKinzel.MimeTypes.MimeType.AppendParameter(System.String,System.String,System.String)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.MimeTypes" /><meta name="guid" content="f4fa2b10-2f6b-37f6-d68c-c2011f714b9d" /><meta name="Description" content="Appends a to the end of the ." /><meta name="tocFile" content="../toc/IDBDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.DataUrls</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Mime<wbr />Type<span id="LSTBEF93775_0" data-languageSpecificText="cpp=::|nu=."></span>Append<wbr />Parameter Method</h1><div class="summary">
            Appends a <a href="6c9b9536-3a7e-2a52-112c-65b45dcc8356.htm">MimeTypeParameter</a> to the end of the <a href="cf45aa02-2c31-6523-699f-9af592bef575.htm">MimeType</a>.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="cd50c7a3-02f6-2e09-4e46-144944c88fc1.htm">FolkerKinzel.MimeTypes</a><br /><strong>Assembly:</strong> FolkerKinzel.MimeTypes (in FolkerKinzel.MimeTypes.dll) Version: 1.0.0+1a444a216a471c2f6ccc003677c21233190b0d23<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">MimeType</span> <span class="identifier">AppendParameter</span>(
	<span class="identifier">string</span> <span class="parameter">key</span>,
	<span class="identifier">string</span>? <span class="parameter">value</span>,
	<span class="identifier">string</span>? <span class="parameter">language</span> = <span class="keyword">null</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">AppendParameter</span> ( 
	<span class="parameter">key</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">language</span> <span class="keyword">As</span> <span class="identifier">String</span> = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">MimeType</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="identifier">MimeType</span>^ <span class="identifier">AppendParameter</span>(
	<span class="identifier">String</span>^ <span class="parameter">key</span>, 
	<span class="identifier">String</span>^ <span class="parameter">value</span>, 
	<span class="identifier">String</span>^ <span class="parameter">language</span> = <span class="keyword">nullptr</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">member</span> <span class="identifier">AppendParameter</span> : 
        <span class="parameter">key</span> : <span class="identifier">string</span> * 
        <span class="parameter">value</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">language</span> : <span class="identifier">string</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">language</span> = defaultArg <span class="identifier">language</span> <span class="keyword">null</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">MimeType</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">key</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The name of the parameter.</dd><dt class="has-text-weight-normal"><span class="parameter">value</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>The value of the parameter.</dd><dt class="has-text-weight-normal"><span class="parameter">language</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>  (Optional)</dt><dd>An IETF-Language tag that indicates the language of the parameter's value.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="cf45aa02-2c31-6523-699f-9af592bef575.htm">MimeType</a><br />A reference to the <a href="cf45aa02-2c31-6523-699f-9af592bef575.htm">MimeType</a> instance on which the method was called.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDFCSection">
            The <span class="parameter">key</span> of a parameter must be unique inside of a <a href="92dd4ad5-92fa-19fe-76a2-10387d0e336c.htm">MimeTypeInfo</a>. It's compared 
            case insensitive. If this method is called several times with equal keys, the last wins.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDICSection"><p>
            Building, serializing, parsing, and editing of <a href="cf45aa02-2c31-6523-699f-9af592bef575.htm">MimeType</a> instances:
            </p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-c#">using FolkerKinzel.MimeTypes;

namespace Examples;

public static class BuildAndParseExample
{
    public static void Example()
    {
        const string longParameterValue = """
        This is a very long parameter that will be wrapped according to RFC 2231.
        It also contains a few Non-ASCII-Characters: äöß.
        """;

        MimeType mimeType1 =
            MimeType.Create("application", "x-stuff")
                    .AppendParameter("first-parameter", longParameterValue, "en")
                    .AppendParameter("second-parameter", "Parameter with  \\, = and \".");

        string s = mimeType1.ToString(MimeFormats.LineWrapping);
        Console.WriteLine(s);

        var mimeType2 = MimeType.Parse(s);

        Console.WriteLine();
        Console.WriteLine("Media Type: {0}", mimeType2.MediaType);
        Console.WriteLine("Sub Type:   {0}", mimeType2.SubType);
        Console.WriteLine();
        Console.WriteLine("Is text:         {0}", mimeType2.IsText);
        Console.WriteLine("Is plain text:   {0}", mimeType2.IsTextPlain);
        Console.WriteLine("Is octet stream: {0}", mimeType2.IsOctetStream);

        int parameterCounter = 1;
        foreach (MimeTypeParameter parameter in mimeType2.Parameters)
        {
            Console.WriteLine();
            Console.WriteLine($"Parameter {parameterCounter++}:");
            Console.WriteLine("============");
            Console.WriteLine($"Key:      {parameter.Key}");
            Console.WriteLine($"Language: {parameter.Language}");
            Console.WriteLine("Value:");
            Console.WriteLine(parameter.Value);
            Console.WriteLine();
            Console.WriteLine("Is charset parameter:       {0}", parameter.IsCharSetParameter);
            Console.WriteLine("Is ASCII charset parameter: {0}", parameter.IsAsciiCharSetParameter);
            Console.WriteLine("Is access type parameter:   {0}", parameter.IsAccessTypeParameter);
            Console.WriteLine("Is value case sensitive:    {0}", parameter.IsValueCaseSensitive);
        }

        // The MimeType class allows to modify the parameters:
        mimeType2.RemoveParameter("first-parameter")
                 .AppendParameter("Second-Parameter", "normal");

        Console.WriteLine();
        Console.Write("mimeType2 modified: ");
        Console.WriteLine(mimeType2);
    }
}
/*
Console Output:

application/x-stuff;
first-parameter*0*=utf-8'en'This%20is%20a%20very%20long%20param;
first-parameter*1*=eter%20that%20will%20be%20wrapped%20accordin;
first-parameter*2*=g%20to%20RFC%202231.%0D%0AIt%20also%20contai;
first-parameter*3*=ns%20a%20few%20Non-ASCII-Characters%3A%20%C3;
first-parameter*4*=%A4%C3%B6%C3%9F.;
second-parameter="Parameter with  \\, = and \"."

Media Type: application
Sub Type:   x-stuff

Is text:         False
Is plain text:   False
Is octet stream: False

Parameter 1:
============
Key:      first-parameter
Language: en
Value:
This is a very long parameter that will be wrapped according to RFC 2231.
It also contains a few Non-ASCII-Characters: äöß.

Is charset parameter:       False
Is ASCII charset parameter: False
Is access type parameter:   False
Is value case sensitive:    True

Parameter 2:
============
Key:      second-parameter
Language:
Value:
Parameter with  \, = and ".

Is charset parameter:       False
Is ASCII charset parameter: False
Is access type parameter:   False
Is value case sensitive:    True

mimeType2 modified: application/x-stuff; second-parameter=normal
 */</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDGCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">key</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><p><span class="parameter">key</span> is <a href="https://learn.microsoft.com/dotnet/api/system.string.empty" target="_blank" rel="noopener noreferrer">Empty</a></p><p>
            - or -
            </p><p><span class="parameter">key</span> is not a valid MIME type parameter name
            according to RFC 2231,
            </p><p>
            - or -
            </p><p><span class="parameter">key</span> is longer than 4095 characters
            </p><p>
            - or -
            </p><p><span class="parameter">language</span> is neither <span class="code">null</span> nor <a href="https://learn.microsoft.com/dotnet/api/system.string.empty" target="_blank" rel="noopener noreferrer">Empty</a> nor a valid IETF-Language-Tag according to RFC-1766.
            </p></td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="cf45aa02-2c31-6523-699f-9af592bef575.htm">MimeType Class</a></div><div><a href="cd50c7a3-02f6-2e09-4e46-144944c88fc1.htm">FolkerKinzel.MimeTypes Namespace</a></div><div><a href="10b0624c-9e34-be3a-c969-2c6747d693dd.htm">MimeTypeParameterInfo</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2024 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>