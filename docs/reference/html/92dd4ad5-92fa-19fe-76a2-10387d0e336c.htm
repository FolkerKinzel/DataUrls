<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>MimeTypeInfo Structure</title><meta name="Title" content="MimeTypeInfo" /><meta name="Help.Id" content="T:FolkerKinzel.MimeTypes.MimeTypeInfo" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.MimeTypes" /><meta name="guid" content="92dd4ad5-92fa-19fe-76a2-10387d0e336c" /><meta name="Description" content="Provides the information stored in an Internet Media Type (&quot;MIME type&quot;)." /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.DataUrls</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Mime<wbr />Type<wbr />Info Structure</h1><div class="summary">
            Provides the information stored in an Internet Media Type <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> ("MIME type").
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="cd50c7a3-02f6-2e09-4e46-144944c88fc1.htm">FolkerKinzel.MimeTypes</a><br /><strong>Assembly:</strong> FolkerKinzel.MimeTypes (in FolkerKinzel.MimeTypes.dll) Version: 1.0.0+d3f1f8aec5277bbffb9e8fb0c01c1724739106fc<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="keyword">struct</span> <span class="identifier">MimeTypeInfo</span> : <span class="identifier">ICloneable</span>, 
	<span class="identifier">IEquatable</span>&lt;<span class="identifier">MimeTypeInfo</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">MimeTypeInfo</span>
	<span class="keyword">Implements</span> <span class="identifier">ICloneable</span>, <span class="identifier">IEquatable</span>(<span class="keyword">Of</span> <span class="identifier">MimeTypeInfo</span>)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span> <span class="keyword">value class</span> <span class="identifier">MimeTypeInfo</span> : <span class="identifier">ICloneable</span>, 
	<span class="identifier">IEquatable</span>&lt;<span class="identifier">MimeTypeInfo</span>&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">MimeTypeInfo</span> = 
    <span class="keyword">struct</span>
        <span class="keyword">inherit</span> <span class="identifier">ValueType</span>
        <span class="keyword">interface</span> <span class="identifier">ICloneable</span>
        <span class="keyword">interface</span> <span class="identifier">IEquatable</span>&lt;<span class="identifier">MimeTypeInfo</span>&gt;
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="https://learn.microsoft.com/dotnet/api/system.valuetype" target="_blank" rel="noopener noreferrer">ValueType</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">MimeTypeInfo</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.icloneable" target="_blank" rel="noopener noreferrer">ICloneable</a>, <a href="https://learn.microsoft.com/dotnet/api/system.iequatable-1" target="_blank" rel="noopener noreferrer">IEquatable</a><span id="LST878BBC5C_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink">MimeTypeInfo</span><span id="LST878BBC5C_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Tip</p></div><div class="message-body"><p><span class="selflink">MimeTypeInfo</span> is a quite large structure. Pass it to other methods by reference (in, ref or out parameters in C#)!
            </p><p>
            If you intend to hold a <span class="selflink">MimeTypeInfo</span> for a long time in memory and if this <span class="selflink">MimeTypeInfo</span> is parsed
            from a <a href="https://learn.microsoft.com/dotnet/api/system.readonlymemory-1" target="_blank" rel="noopener noreferrer">ReadOnlyMemory&lt;Char&gt;</a> that comes from a very long <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>, 
            keep in mind, that the <span class="selflink">MimeTypeInfo</span> holds a reference to that <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>. Consider in this case to make
            a copy of the <span class="selflink">MimeTypeInfo</span> structure with <a href="0214443e-9323-510e-a684-8a8f23a1a631.htm">Clone<span id="LST878BBC5C_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>: The copy is built on a separate <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>,
            which is case-normalized and only as long as needed.
            </p></div></article></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><p>
            Efficient parsing of an Internet Media Type <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>:
            </p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-c#">using FolkerKinzel.MimeTypes;

namespace Examples;

public static class MimeTypeInfoExample
{
    public static void Example()
    {
        const string input = """
        This is some text before the MIME type.
                             text/plain; charset=iso-8859-1; (This is a comment.)
        second-parameter*0*=utf-8'en'For%20demonstration%20purposes%20o;
        second-parameter*1*=nly%2C%20with%20a%20few%20non-ASCII%20chara;
        second-parameter*2*=cters%20%C3%A4%C3%B6%C3%BC

                        This is some Text after the MIME type.
        """;

        // MimeTypeInfo parses a specified part of a longer string
        // without having to allocate a substring.
        // White space characters before and after the MIME type are accepted.
        // The return values of the properties are portions of the input in form
        // of ReadOnlySpan&lt;char&gt; structs.

        MimeTypeInfo info = MimeTypeInfo.Parse(input.AsMemory(39, 275));

        Console.WriteLine("Media Type: {0}", info.MediaType.ToString());
        Console.WriteLine("Sub Type:   {0}", info.SubType.ToString());
        Console.WriteLine();
        Console.WriteLine("Is empty:        {0}", info.IsEmpty);
        Console.WriteLine("Is text:         {0}", info.IsText);
        Console.WriteLine("Is plain text:   {0}", info.IsTextPlain);
        Console.WriteLine("Is octet stream: {0}", info.IsOctetStream);

        Console.WriteLine("The file type extension for this MIME type is \"{0}\".",
                           info.GetFileTypeExtension());

        int parameterCounter = 1;
        foreach (MimeTypeParameterInfo parameter in info.Parameters())
        {
            Console.WriteLine();
            Console.WriteLine($"Parameter {parameterCounter++}:");
            Console.WriteLine("============");
            Console.WriteLine($"Key:       {parameter.Key}");
            Console.WriteLine($"Value:     {parameter.Value}");
            Console.WriteLine($"Language:  {parameter.Language}");
            Console.WriteLine($"Charset:   {parameter.CharSet}");
            Console.WriteLine("Is charset parameter:       {0}", parameter.IsCharSetParameter);
            Console.WriteLine("Is ASCII charset parameter: {0}", parameter.IsAsciiCharSetParameter);
            Console.WriteLine("Is access type parameter:   {0}", parameter.IsAccessTypeParameter);
            Console.WriteLine("Is value case sensitive:    {0}", parameter.IsValueCaseSensitive);
        }
        Console.WriteLine();

        // Compare MimeTypeInfo values using options:
        MimeTypeInfo info2 = MimeTypeInfo.Parse("TEXT/PLAIN; CHARSET=UTF-8");
        Console.WriteLine("Equal with parameters:      {0}", info.Equals(in info2));
        Console.WriteLine("Equal without parameters:   {0}", info.Equals(in info2, ignoreParameters: true));

        Console.WriteLine();
        Console.WriteLine("Default:           {0}", info2.ToString());
        Console.WriteLine("Ignore Parameters: {0}", info2.ToString(MimeFormats.IgnoreParameters));
    }
}
/*
Console output: 

Media Type: text
Sub Type:   plain

Is empty:        False
Is text:         True
Is plain text:   True
Is octet stream: False
The file type extension for this MIME type is ".txt".

Parameter 1:
============
Key:       charset
Value:     iso-8859-1
Language:
Charset:
Is charset parameter:       True
Is ASCII charset parameter: False
Is access type parameter:   False
Is value case sensitive:    False

Parameter 2:
============
Key:       second-parameter
Value:     For demonstration purposes only, with a few non-ASCII characters äöü
Language:  en
Charset:   utf-8
Is charset parameter:       False
Is ASCII charset parameter: False
Is access type parameter:   False
Is value case sensitive:    True

Equal with parameters:      False
Equal without parameters:   True

Default:           text/plain; charset=utf-8
Ignore Parameters: text/plain
 */</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDNFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="777db184-2508-e5ba-25bf-a5e58e2bfa3b.htm">Empty</a></td><td>
            Gets an empty <span class="selflink">MimeTypeInfo</span> structure.
            </td></tr><tr><td><a href="6b0e37d7-5c93-22ba-8fdc-d84ba7a04b48.htm">IsEmpty</a></td><td>
            Indicates whether the instance contains no data.
            </td></tr><tr><td><a href="4f74b1eb-0b66-542c-a1a4-4f6e7a0e0fd0.htm">IsOctetStream</a></td><td>
            Indicates whether this instance is equal to <a href="589a665b-be59-c0f8-91cb-5421a0c5f5b8.htm">OctetStream</a>. The parameters are not taken into account.
            The comparison is case-insensitive.
            </td></tr><tr><td><a href="71657f08-0d49-b2de-9615-a3b2a51fff25.htm">IsText</a></td><td>
            Determines whether the <a href="49ac904c-bd9f-ba20-559f-ac3e8d42c811.htm">MediaType</a> of this instance equals "text".
            The comparison is case-insensitive.
            </td></tr><tr><td><a href="411f2d5f-4863-51ad-af17-80f3b2ed441f.htm">IsTextPlain</a></td><td>
            Indicates whether this instance is equal to the MIME type "text/plain". The parameters are not taken into account.
            The comparison is case-insensitive.
            </td></tr><tr><td><a href="49ac904c-bd9f-ba20-559f-ac3e8d42c811.htm">MediaType</a></td><td>
            Gets the Top-Level Media Type. (The left part of a MIME-Type.)
            </td></tr><tr><td><a href="7b7e881e-1f08-8228-cee3-a1954b436d29.htm">SubType</a></td><td>
            Gets the Sub Type. (The right part of a MIME-Type.)
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="18a05f84-52bd-794e-5352-d41b38128d03.htm">AppendTo</a></td><td>
            Appends a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> representation of this instance according to RFC 2045 and RFC 2231 to the end of a 
            <a href="https://learn.microsoft.com/dotnet/api/system.text.stringbuilder" target="_blank" rel="noopener noreferrer">StringBuilder</a>.
            </td></tr><tr><td><a href="0214443e-9323-510e-a684-8a8f23a1a631.htm">Clone</a></td><td>
            Creates a new <span class="selflink">MimeTypeInfo</span> that is a copy of the current instance.
            </td></tr><tr><td><a href="6b4969b5-47bf-92e3-9aa4-e4481a6987b0.htm">Equals(MimeTypeInfo)</a></td><td>
            Determines whether the value of this instance is equal to the value of <span class="parameter">other</span>. The <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>
            are taken into account.
            </td></tr><tr><td><a href="c1e7cf53-ab16-e759-ffde-76bea9571c04.htm">Equals(MimeTypeInfo<span id="LST878BBC5C_4" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Determines whether the value of this instance is equal to the value of <span class="parameter">other</span>. The <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_5" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>
            are taken into account.
            </td></tr><tr><td><a href="731f04a1-d808-0aef-947e-5cac62fd2428.htm">Equals(Object)</a></td><td>
            Determines whether <span class="parameter">obj</span> is a <span class="selflink">MimeTypeInfo</span> structure whose
            value is equal to that of this instance. The <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>
            are taken into account.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.valuetype.equals" target="_blank" rel="noopener noreferrer">ValueType<span id="LST878BBC5C_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Equals(Object)</a>)</td></tr><tr><td><a href="29174996-3358-56e8-f024-1de1c8c546cd.htm">Equals(MimeTypeInfo<span id="LST878BBC5C_8" data-languageSpecificText="cpp=%"></span>, Boolean)</a></td><td>
            Determines whether this instance is equal to <span class="parameter">other</span> and allows to specify
            whether or not the <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> are taken into account.
            </td></tr><tr><td><a href="2db3adc5-0c03-be8e-2ceb-67e834ec7752.htm">GetFileTypeExtension</a></td><td>
            Gets an appropriate file type extension for the <span class="selflink">MimeTypeInfo</span> instance.
            </td></tr><tr><td><a href="19a3e52a-a25e-7ed8-1e52-6acf19f39373.htm">GetHashCode<span id="LST878BBC5C_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Creates a hash code for this instance, which takes the <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_11" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> into account.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode" target="_blank" rel="noopener noreferrer">ValueType<span id="LST878BBC5C_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>GetHashCode<span id="LST878BBC5C_13" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="1292e9f1-1a5b-7e1e-d3be-240851c5c357.htm">GetHashCode(Boolean)</a></td><td>
            Creates a hash code for this instance and allows to specify whether or not
            the <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_14" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> are taken into account.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters</a></td><td>
            Gets the parameters.
            </td></tr><tr><td><a href="32526597-7f6c-f2ab-b220-87e41375b38c.htm">Parse(ReadOnlyMemory<span id="LST878BBC5C_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST878BBC5C_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Parses a <a href="https://learn.microsoft.com/dotnet/api/system.readonlymemory-1" target="_blank" rel="noopener noreferrer">ReadOnlyMemory&lt;Char&gt;</a> as <span class="selflink">MimeTypeInfo</span>.
            </td></tr><tr><td><a href="8aa9e298-2c81-8919-20b2-f600cbaef5de.htm">Parse(String)</a></td><td>
            Parses a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> as <span class="selflink">MimeTypeInfo</span>.
            </td></tr><tr><td><a href="16bc9616-1254-bcd5-adb9-1fe62817dc4c.htm">ToString<span id="LST878BBC5C_17" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Serializes the instance as Internet Media Type <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> ("MIME type") using the 
            <a href="7dd40725-08ed-a754-e137-30970a5e4b25.htm">Default</a> format.
            <br />(Overrides <a href="https://learn.microsoft.com/dotnet/api/system.valuetype.tostring" target="_blank" rel="noopener noreferrer">ValueType<span id="LST878BBC5C_18" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ToString<span id="LST878BBC5C_19" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="44b452cb-a6b1-cbbb-8056-23678ebc3b08.htm">ToString(MimeFormats, Int32)</a></td><td>
            Serializes the instance as Internet Media Type <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> ("MIME type") with several <span class="parameter">options</span></td></tr><tr><td><a href="87f4d047-ae57-f1e6-2e21-fc8c1c81c1a7.htm">TryParse(ReadOnlyMemory<span id="LST878BBC5C_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST878BBC5C_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, MimeTypeInfo<span id="LST878BBC5C_22" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Tries to parse a <a href="https://learn.microsoft.com/dotnet/api/system.readonlymemory-1" target="_blank" rel="noopener noreferrer">ReadOnlyMemory&lt;Char&gt;</a> as <span class="selflink">MimeTypeInfo</span>.
            </td></tr><tr><td><a href="dbf9fa34-c607-10a7-701f-fdd2cf5e93b6.htm">TryParse(String, MimeTypeInfo<span id="LST878BBC5C_23" data-languageSpecificText="cpp=%"></span>)</a></td><td>
            Tries to parse a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> as <span class="selflink">MimeTypeInfo</span>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="IDFFASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="b4cb2fe1-f43b-72e0-3318-2892b924fecd.htm">Equality(MimeTypeInfo, MimeTypeInfo)</a></td><td>
            Returns a value that indicates whether two specified <span class="selflink">MimeTypeInfo</span> instances are equal.
            The <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_24" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> are taken into account.
            </td></tr><tr><td><a href="aa501712-574f-71a5-3972-27ae1f3cd035.htm">Inequality(MimeTypeInfo, MimeTypeInfo)</a></td><td>
            Returns a value that indicates whether two specified <span class="selflink">MimeTypeInfo</span> instances are not equal.
            The <a href="39635aeb-fe5f-9a23-e677-25e147872d29.htm">Parameters<span id="LST878BBC5C_25" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> are taken into account.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Explicit Interface Implementations</h2><div id="IDJFASection"><table id="ExplicitInterfaceImplementationList" class="table is-hoverable"><tr><td><a href="61c3b29e-3750-5099-7c7e-3992bc706ecf.htm">ICloneable<span id="LST878BBC5C_26" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Clone</a></td><td>Creates a new object that is a copy of the current instance.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="cd50c7a3-02f6-2e09-4e46-144944c88fc1.htm">FolkerKinzel.MimeTypes Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Explicit Interface Implementations</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2024 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>